{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "cypress/globals": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "plugin:jsx-a11y/recommended",
    "prettier",
    "prettier/react",
    "plugin:jest/recommended",
    "plugin:cypress/recommended"
  ],
  "plugins": ["prettier", "unicorn", "jest", "cypress"],
  "settings": {
    "import/resolver": {
      "babel-module": {}
    }
  },
  "rules": {
    "prettier/prettier": ["error"],
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    "no-unused-vars": ["error", { "args": "none" }],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        "components": ["Link"],
        "specialLink": ["route"],
        "aspects": ["invalidHref", "preferButton"]
      }
    ],
    "import/no-unresolved": "off",
    "class-methods-use-this": "off",
    "_comment": "/* THE FOLLOWING RULES ARE A DUMP FROM ELSEWHERE, DISABLE WHEN NEEDED */",
    "comma-dangle": ["error", "only-multiline"],
    "import/extensions": [
      "error",
      "never",
      {
        "css": "always",
        "jpg": "always",
        "json": "always",
        "png": "always",
        "svg": "always"
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ]
      }
    ],
    "jest/consistent-test-it": [
      "error",
      {
        "fn": "it",
        "withinDescribe": "it"
      }
    ],
    "jest/expect-expect": [
      "error",
      {
        "assertFunctionNames": [
          "expect",
          "createShallowSnapshotTest",
          "createSnapshotTest"
        ]
      }
    ],
    "jest/lowercase-name": [
      "error",
      {
        "ignore": ["describe"]
      }
    ],
    "jest/no-jasmine-globals": "error",
    "jest/no-test-prefixes": "error",
    "jest/no-test-return-statement": "error",
    "jest/prefer-strict-equal": "error",
    "jest/prefer-to-be-null": "error",
    "jest/prefer-to-be-undefined": "error",
    "jest/require-tothrow-message": "error",
    "jest/valid-describe": "error",
    "jsx-a11y/label-has-for": [
      2,
      {
        "components": ["Label"],
        "required": {
          "some": ["for"]
        },
        "allowChildren": true
      }
    ],
    "max-len": [
      "error",
      {
        "code": 100,
        "ignoreUrls": true
      }
    ],
    "multiline-ternary": ["error", "always-multiline"],
    "no-console": "warn",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "react-select",
            "message": "Please use `components/Form/Select/ThemedReactSelect` instead."
          }
        ]
      }
    ],
    "no-use-before-define": "off",
    "react/forbid-prop-types": [
      "error",
      {
        "forbid": ["any"]
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    "react/jsx-one-expression-per-line": "off",
    "react/no-did-mount-set-state": "off",
    "react/no-unused-prop-types": "off",
    "react/no-unused-state": "error",
    "react/prefer-stateless-function": ["off"],
    "unicorn/catch-error-name": "error",
    "unicorn/error-message": "error",
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-fn-reference-in-iterator": "error",
    "unicorn/no-for-loop": "error",
    "unicorn/no-unreadable-array-destructuring": "error",
    "unicorn/no-zero-fractions": "error",
    "unicorn/prefer-includes": "error",
    "unicorn/prefer-node-append": "error",
    "unicorn/prefer-node-remove": "error",
    "unicorn/prefer-query-selector": "error",
    "unicorn/prefer-spread": "error",
    "unicorn/prefer-starts-ends-with": "error",
    "unicorn/prefer-text-content": "error",
    "unicorn/prefer-type-error": "error",
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "whitelist": {
          "getInitialProps": true,
          "initialProps": true,
          "props": true,
          "requiredProps": true,
          "defaultProps": true,
          "mapStateToProps": true,
          "propValue": true,
          "propFullName": true,
          "ctx": true,
          "includePropTables": true
        }
      }
    ],
    "unicorn/throw-new-error": "error"
  }
}
